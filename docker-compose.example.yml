version: '3.8'

# Example Docker Compose for running Permiso with PostgreSQL
# Copy this file to docker-compose.yml and adjust as needed

services:
  postgres:
    image: postgres:16-alpine
    container_name: permiso-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword  # Change this!
      POSTGRES_DB: permiso
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - permiso-network

  permiso:
    image: ghcr.io/codespin-ai/permiso:latest
    container_name: permiso-server
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database configuration
      PERMISO_DB_HOST: postgres
      PERMISO_DB_PORT: 5432
      PERMISO_DB_NAME: permiso
      PERMISO_DB_USER: postgres
      PERMISO_DB_PASSWORD: mysecretpassword  # Match postgres password
      
      # Enable automatic migrations (great for development/testing)
      PERMISO_AUTO_MIGRATE: "true"
      
      # Server configuration
      PERMISO_SERVER_PORT: 5001
      LOG_LEVEL: info
      
      # API Key authentication (optional - uncomment to enable)
      # PERMISO_API_KEY: your-secure-api-key-here
      # PERMISO_API_KEY_ENABLED: "true"
    ports:
      - "5001:5001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - permiso-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  permiso-network:
    driver: bridge